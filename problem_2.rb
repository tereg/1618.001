# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def sum_of_fibonacci_evens
  sequence = [1, 2]
  i = 3

  while sequence.last <= 4000000
    sequence << (sequence[i-2] + sequence[i-3])
    i += 1
  end

  evens = sequence.select { |num| num.even? }
  evens.reduce(:+)
end

p sum_of_fibonacci_evens



# def fibonacci(n)
#   sequence = [1, 2]
#   i = 3
#
#   if n == 1 || n == 2
#     return sequence[n - 1]
#   else
#     while i <= n
#
#       sequence << (sequence[i-2] + sequence[i-3])
#       i += 1
#     end
#   end
#   sequence[n - 1]
# end
